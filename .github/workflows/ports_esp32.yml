name: esp32 port

on:
  push:
    paths:
      - '.github/workflows/*.yml'
      - 'tools/**'
      - 'py/**'
      - 'extmod/**'
      - 'lib/**'
      - 'drivers/**'
      - 'ports/esp32/**'

jobs:
  build_airguard:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install packages
      run: source tools/ci.sh && ci_esp32_airguard_setup
    - name: Build
      run: source tools/ci.sh && ci_esp32_airguard_build

    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Firmware binaries
        path: |
          ports/esp32/build-AIRGUARD/*.bin

    - name: Create Release
      id: create_release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ports/esp32/build-AIRGUARD/micropython.bin
        asset_name: esp32-airguard-micropython.bin
        asset_content_type: application/octet-stream
